<main class="dashboard-container">
        <!-- Sidebar navigation -->
    <aside class="sidebar">
        <nav class="sidebar-menu">
            <%= link_to 'authority_dashboard_path', class: 'menu-item' do %>
                <i class='bx bx-list-ul'></i> <span>Home</span>
            <% end %>
            <%= link_to complaints_path, class: 'menu-item active' do %>
                <i class='bx bx-list-ul'></i> <span>All Complaints</span>
            <% end %>
            <%= link_to pending_complaints_path, class: 'menu-item' do %>
                <i class='bx bx-time-five'></i> <span>Pending Complaints</span>
            <% end %>
            <%= link_to authority_profile_path, class: 'menu-item' do %>
                <i class='bx bx-user'></i> <span>Profile</span>
            <% end %>
            <%= link_to edit_authority_profile_path, class: 'menu-item' do %>
                <i class='bx bx-edit active'></i> <span>Edit Profile</span>
            <% end %>
        </nav>
    </aside>
    <section class="content-area spcl">
      <h1 class="complaints-heading">All Complaints</h1>
      <% if @complaints.any? %>
        <table class="complaints-table">
          <thead>
            <tr>
              <th>Type</th>
              <th>Description</th>
              <th>Status</th>
              <th>Created At</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% @complaints.each do |complaint| %>
              <tr>
                <td><%= complaint.complaint_type.name %></td>
                <td class="complaints-description-cell"><%= complaint.description %></td>
                <td><%= complaint.status %></td>
                <td><%= complaint.created_at.strftime('%Y-%m-%d') %></td>
                <td class="complaints-action-buttons">
                  <%= link_to 'View', complaint_path(complaint), class: "complaints-btn complaints-btn-view" %>
                  <%= link_to 'Edit', edit_complaint_path(complaint), class: "complaints-btn complaints-btn-edit" %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      <% else %>
        <p class="complaints-no-complaints-message">You have not submitted any complaints yet.</p>
      <% end %>
    </section>
</main>

<script>
  document.addEventListener("DOMContentLoaded", function() {
  // Select all resolve and reject buttons
  let resButtons = document.querySelectorAll(".resolve-btn");
  let rejButtons = document.querySelectorAll(".reject-btn");

  // Event listener for resolve buttons
  resButtons.forEach(function(button) {
    button.addEventListener("click", function(event) {
      event.preventDefault();  // Prevent the default link behavior

      // Extract the complaint ID from the data-complaint_id attribute
      let complaintId = this.getAttribute('data-complaint_id');
      let statusCell = this.closest('tr').querySelector('.status');  // Locate the status cell in the row

      // Send the PUT request using fetch to update the complaint's status to "Resolved"
      fetch(`/complaints/${complaintId}/resolve`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ status: 'Resolved' })  // Send the updated status in the request body
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          statusCell.textContent = "Resolved";  // Update the status in the UI
        }
      })
      .catch(error => {
        console.error('Error:', error);  // Handle any errors
      });
    });
  });

  // Event listener for reject buttons
  rejButtons.forEach(function(button) {
    button.addEventListener("click", function(event) {
      event.preventDefault();  // Prevent default behavior

      let complaintId = this.getAttribute('data-complaint_id');
      let statusCell = this.closest('tr').querySelector('.status');

      // Send PUT request to reject the complaint
      fetch(`/complaints/${complaintId}/reject`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ status: 'Rejected' })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          statusCell.textContent = "Rejected";  // Update the status in the UI
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });
  });
});

</script>